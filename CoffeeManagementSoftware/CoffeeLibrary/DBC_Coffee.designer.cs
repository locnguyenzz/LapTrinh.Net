#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoffeeLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_Coffee")]
	public partial class DBC_CoffeeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Insertuser_group_user(user_group_user instance);
    partial void Updateuser_group_user(user_group_user instance);
    partial void Deleteuser_group_user(user_group_user instance);
    partial void Insertarea(area instance);
    partial void Updatearea(area instance);
    partial void Deletearea(area instance);
    partial void Insertconvert(convert instance);
    partial void Updateconvert(convert instance);
    partial void Deleteconvert(convert instance);
    partial void Insertdetail_receipt_import(detail_receipt_import instance);
    partial void Updatedetail_receipt_import(detail_receipt_import instance);
    partial void Deletedetail_receipt_import(detail_receipt_import instance);
    partial void Insertgrant_right(grant_right instance);
    partial void Updategrant_right(grant_right instance);
    partial void Deletegrant_right(grant_right instance);
    partial void Insertgroup_user(group_user instance);
    partial void Updategroup_user(group_user instance);
    partial void Deletegroup_user(group_user instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void Insertprofile(profile instance);
    partial void Updateprofile(profile instance);
    partial void Deleteprofile(profile instance);
    partial void Insertreceipt(receipt instance);
    partial void Updatereceipt(receipt instance);
    partial void Deletereceipt(receipt instance);
    partial void Insertreceipt_import(receipt_import instance);
    partial void Updatereceipt_import(receipt_import instance);
    partial void Deletereceipt_import(receipt_import instance);
    partial void Insertscreen(screen instance);
    partial void Updatescreen(screen instance);
    partial void Deletescreen(screen instance);
    partial void Insertsupplier(supplier instance);
    partial void Updatesupplier(supplier instance);
    partial void Deletesupplier(supplier instance);
    partial void Inserttable(table instance);
    partial void Updatetable(table instance);
    partial void Deletetable(table instance);
    partial void Insertthuchi(thuchi instance);
    partial void Updatethuchi(thuchi instance);
    partial void Deletethuchi(thuchi instance);
    partial void Inserttimekeeping(timekeeping instance);
    partial void Updatetimekeeping(timekeeping instance);
    partial void Deletetimekeeping(timekeeping instance);
    partial void Inserttype_ballot(type_ballot instance);
    partial void Updatetype_ballot(type_ballot instance);
    partial void Deletetype_ballot(type_ballot instance);
    partial void Inserttype_customer(type_customer instance);
    partial void Updatetype_customer(type_customer instance);
    partial void Deletetype_customer(type_customer instance);
    partial void Inserttype_item(type_item instance);
    partial void Updatetype_item(type_item instance);
    partial void Deletetype_item(type_item instance);
    #endregion
		
		public DBC_CoffeeDataContext() : 
				base(global::CoffeeLibrary.Properties.Settings.Default.DB_CoffeeConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DBC_CoffeeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBC_CoffeeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBC_CoffeeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBC_CoffeeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<user_group_user> user_group_users
		{
			get
			{
				return this.GetTable<user_group_user>();
			}
		}
		
		public System.Data.Linq.Table<area> areas
		{
			get
			{
				return this.GetTable<area>();
			}
		}
		
		public System.Data.Linq.Table<convert> converts
		{
			get
			{
				return this.GetTable<convert>();
			}
		}
		
		public System.Data.Linq.Table<detail_receipt> detail_receipts
		{
			get
			{
				return this.GetTable<detail_receipt>();
			}
		}
		
		public System.Data.Linq.Table<detail_receipt_import> detail_receipt_imports
		{
			get
			{
				return this.GetTable<detail_receipt_import>();
			}
		}
		
		public System.Data.Linq.Table<grant_right> grant_rights
		{
			get
			{
				return this.GetTable<grant_right>();
			}
		}
		
		public System.Data.Linq.Table<group_user> group_users
		{
			get
			{
				return this.GetTable<group_user>();
			}
		}
		
		public System.Data.Linq.Table<inventory> inventories
		{
			get
			{
				return this.GetTable<inventory>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<profile> profiles
		{
			get
			{
				return this.GetTable<profile>();
			}
		}
		
		public System.Data.Linq.Table<receipt> receipts
		{
			get
			{
				return this.GetTable<receipt>();
			}
		}
		
		public System.Data.Linq.Table<receipt_import> receipt_imports
		{
			get
			{
				return this.GetTable<receipt_import>();
			}
		}
		
		public System.Data.Linq.Table<screen> screens
		{
			get
			{
				return this.GetTable<screen>();
			}
		}
		
		public System.Data.Linq.Table<supplier> suppliers
		{
			get
			{
				return this.GetTable<supplier>();
			}
		}
		
		public System.Data.Linq.Table<table> tables
		{
			get
			{
				return this.GetTable<table>();
			}
		}
		
		public System.Data.Linq.Table<thuchi> thuchis
		{
			get
			{
				return this.GetTable<thuchi>();
			}
		}
		
		public System.Data.Linq.Table<timekeeping> timekeepings
		{
			get
			{
				return this.GetTable<timekeeping>();
			}
		}
		
		public System.Data.Linq.Table<type_ballot> type_ballots
		{
			get
			{
				return this.GetTable<type_ballot>();
			}
		}
		
		public System.Data.Linq.Table<type_customer> type_customers
		{
			get
			{
				return this.GetTable<type_customer>();
			}
		}
		
		public System.Data.Linq.Table<type_item> type_items
		{
			get
			{
				return this.GetTable<type_item>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<user_group_user> _user_group_users;
		
		private EntitySet<profile> _profiles;
		
		private EntitySet<receipt> _receipts;
		
		private EntitySet<receipt> _receipts1;
		
		private EntitySet<receipt_import> _receipt_imports;
		
		private EntitySet<timekeeping> _timekeepings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public account()
		{
			this._user_group_users = new EntitySet<user_group_user>(new Action<user_group_user>(this.attach_user_group_users), new Action<user_group_user>(this.detach_user_group_users));
			this._profiles = new EntitySet<profile>(new Action<profile>(this.attach_profiles), new Action<profile>(this.detach_profiles));
			this._receipts = new EntitySet<receipt>(new Action<receipt>(this.attach_receipts), new Action<receipt>(this.detach_receipts));
			this._receipts1 = new EntitySet<receipt>(new Action<receipt>(this.attach_receipts1), new Action<receipt>(this.detach_receipts1));
			this._receipt_imports = new EntitySet<receipt_import>(new Action<receipt_import>(this.attach_receipt_imports), new Action<receipt_import>(this.detach_receipt_imports));
			this._timekeepings = new EntitySet<timekeeping>(new Action<timekeeping>(this.attach_timekeepings), new Action<timekeeping>(this.detach_timekeepings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(50)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(50)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_user_group_user", Storage="_user_group_users", ThisKey="ID", OtherKey="ID_ACCOUNT")]
		public EntitySet<user_group_user> user_group_users
		{
			get
			{
				return this._user_group_users;
			}
			set
			{
				this._user_group_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_profile", Storage="_profiles", ThisKey="ID", OtherKey="ID_ACCOUNT")]
		public EntitySet<profile> profiles
		{
			get
			{
				return this._profiles;
			}
			set
			{
				this._profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_receipt", Storage="_receipts", ThisKey="ID", OtherKey="ID_ACCOUNT_STAFF")]
		public EntitySet<receipt> receipts
		{
			get
			{
				return this._receipts;
			}
			set
			{
				this._receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_receipt1", Storage="_receipts1", ThisKey="ID", OtherKey="ID_ACCOUNT_CUSTOMER")]
		public EntitySet<receipt> receipts1
		{
			get
			{
				return this._receipts1;
			}
			set
			{
				this._receipts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_receipt_import", Storage="_receipt_imports", ThisKey="ID", OtherKey="ID_ACCOUNT")]
		public EntitySet<receipt_import> receipt_imports
		{
			get
			{
				return this._receipt_imports;
			}
			set
			{
				this._receipt_imports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_timekeeping", Storage="_timekeepings", ThisKey="ID", OtherKey="ID_ACCOUNT")]
		public EntitySet<timekeeping> timekeepings
		{
			get
			{
				return this._timekeepings;
			}
			set
			{
				this._timekeepings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_group_users(user_group_user entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_user_group_users(user_group_user entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_receipts1(receipt entity)
		{
			this.SendPropertyChanging();
			entity.account1 = this;
		}
		
		private void detach_receipts1(receipt entity)
		{
			this.SendPropertyChanging();
			entity.account1 = null;
		}
		
		private void attach_receipt_imports(receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_receipt_imports(receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_timekeepings(timekeeping entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_timekeepings(timekeeping entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_group_user")]
	public partial class user_group_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ACCOUNT;
		
		private int _ID_GROUP;
		
		private System.Nullable<int> _STATUS;
		
		private EntityRef<account> _account;
		
		private EntityRef<group_user> _group_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ACCOUNTChanging(int value);
    partial void OnID_ACCOUNTChanged();
    partial void OnID_GROUPChanging(int value);
    partial void OnID_GROUPChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public user_group_user()
		{
			this._account = default(EntityRef<account>);
			this._group_user = default(EntityRef<group_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ACCOUNT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_ACCOUNT
		{
			get
			{
				return this._ID_ACCOUNT;
			}
			set
			{
				if ((this._ID_ACCOUNT != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._ID_ACCOUNT = value;
					this.SendPropertyChanged("ID_ACCOUNT");
					this.OnID_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GROUP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_GROUP
		{
			get
			{
				return this._ID_GROUP;
			}
			set
			{
				if ((this._ID_GROUP != value))
				{
					if (this._group_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GROUPChanging(value);
					this.SendPropertyChanging();
					this._ID_GROUP = value;
					this.SendPropertyChanged("ID_GROUP");
					this.OnID_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_user_group_user", Storage="_account", ThisKey="ID_ACCOUNT", OtherKey="ID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.user_group_users.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.user_group_users.Add(this);
						this._ID_ACCOUNT = value.ID;
					}
					else
					{
						this._ID_ACCOUNT = default(int);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_user_user_group_user", Storage="_group_user", ThisKey="ID_GROUP", OtherKey="ID", IsForeignKey=true)]
		public group_user group_user
		{
			get
			{
				return this._group_user.Entity;
			}
			set
			{
				group_user previousValue = this._group_user.Entity;
				if (((previousValue != value) 
							|| (this._group_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._group_user.Entity = null;
						previousValue.user_group_users.Remove(this);
					}
					this._group_user.Entity = value;
					if ((value != null))
					{
						value.user_group_users.Add(this);
						this._ID_GROUP = value.ID;
					}
					else
					{
						this._ID_GROUP = default(int);
					}
					this.SendPropertyChanged("group_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.area")]
	public partial class area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME_AREA;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<table> _tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAME_AREAChanging(string value);
    partial void OnNAME_AREAChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public area()
		{
			this._tables = new EntitySet<table>(new Action<table>(this.attach_tables), new Action<table>(this.detach_tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_AREA", DbType="NVarChar(50)")]
		public string NAME_AREA
		{
			get
			{
				return this._NAME_AREA;
			}
			set
			{
				if ((this._NAME_AREA != value))
				{
					this.OnNAME_AREAChanging(value);
					this.SendPropertyChanging();
					this._NAME_AREA = value;
					this.SendPropertyChanged("NAME_AREA");
					this.OnNAME_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="area_table", Storage="_tables", ThisKey="ID", OtherKey="ID_AREA")]
		public EntitySet<table> tables
		{
			get
			{
				return this._tables;
			}
			set
			{
				this._tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tables(table entity)
		{
			this.SendPropertyChanging();
			entity.area = this;
		}
		
		private void detach_tables(table entity)
		{
			this.SendPropertyChanging();
			entity.area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[convert]")]
	public partial class convert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME_UNIT_BEFORE;
		
		private System.Nullable<double> _NUMBER_BEFORE;
		
		private string _NAME_UNIT_AFTER;
		
		private System.Nullable<double> _NUMBER_AFTER;
		
		private System.Nullable<int> _STATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAME_UNIT_BEFOREChanging(string value);
    partial void OnNAME_UNIT_BEFOREChanged();
    partial void OnNUMBER_BEFOREChanging(System.Nullable<double> value);
    partial void OnNUMBER_BEFOREChanged();
    partial void OnNAME_UNIT_AFTERChanging(string value);
    partial void OnNAME_UNIT_AFTERChanged();
    partial void OnNUMBER_AFTERChanging(System.Nullable<double> value);
    partial void OnNUMBER_AFTERChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public convert()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_UNIT_BEFORE", DbType="NVarChar(50)")]
		public string NAME_UNIT_BEFORE
		{
			get
			{
				return this._NAME_UNIT_BEFORE;
			}
			set
			{
				if ((this._NAME_UNIT_BEFORE != value))
				{
					this.OnNAME_UNIT_BEFOREChanging(value);
					this.SendPropertyChanging();
					this._NAME_UNIT_BEFORE = value;
					this.SendPropertyChanged("NAME_UNIT_BEFORE");
					this.OnNAME_UNIT_BEFOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER_BEFORE", DbType="Float")]
		public System.Nullable<double> NUMBER_BEFORE
		{
			get
			{
				return this._NUMBER_BEFORE;
			}
			set
			{
				if ((this._NUMBER_BEFORE != value))
				{
					this.OnNUMBER_BEFOREChanging(value);
					this.SendPropertyChanging();
					this._NUMBER_BEFORE = value;
					this.SendPropertyChanged("NUMBER_BEFORE");
					this.OnNUMBER_BEFOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_UNIT_AFTER", DbType="NVarChar(50)")]
		public string NAME_UNIT_AFTER
		{
			get
			{
				return this._NAME_UNIT_AFTER;
			}
			set
			{
				if ((this._NAME_UNIT_AFTER != value))
				{
					this.OnNAME_UNIT_AFTERChanging(value);
					this.SendPropertyChanging();
					this._NAME_UNIT_AFTER = value;
					this.SendPropertyChanged("NAME_UNIT_AFTER");
					this.OnNAME_UNIT_AFTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER_AFTER", DbType="Float")]
		public System.Nullable<double> NUMBER_AFTER
		{
			get
			{
				return this._NUMBER_AFTER;
			}
			set
			{
				if ((this._NUMBER_AFTER != value))
				{
					this.OnNUMBER_AFTERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER_AFTER = value;
					this.SendPropertyChanged("NUMBER_AFTER");
					this.OnNUMBER_AFTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detail_receipt")]
	public partial class detail_receipt
	{
		
		private int _ID;
		
		private int _ID_RECEIPT;
		
		private int _ID_ITEM;
		
		private System.Nullable<int> _ID_TABLE;
		
		private int _NUMBER;
		
		private int _STATUS;
		
		public detail_receipt()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RECEIPT", DbType="Int NOT NULL")]
		public int ID_RECEIPT
		{
			get
			{
				return this._ID_RECEIPT;
			}
			set
			{
				if ((this._ID_RECEIPT != value))
				{
					this._ID_RECEIPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ITEM", DbType="Int NOT NULL")]
		public int ID_ITEM
		{
			get
			{
				return this._ID_ITEM;
			}
			set
			{
				if ((this._ID_ITEM != value))
				{
					this._ID_ITEM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TABLE", DbType="Int")]
		public System.Nullable<int> ID_TABLE
		{
			get
			{
				return this._ID_TABLE;
			}
			set
			{
				if ((this._ID_TABLE != value))
				{
					this._ID_TABLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="Int NOT NULL")]
		public int NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this._NUMBER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int NOT NULL")]
		public int STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this._STATUS = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detail_receipt_import")]
	public partial class detail_receipt_import : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_RECEIPT_IMPORT;
		
		private System.Nullable<int> _ID_ITEM;
		
		private int _NUMBER;
		
		private System.Nullable<int> _STATUS;
		
		private EntityRef<item> _item;
		
		private EntityRef<receipt_import> _receipt_import;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_RECEIPT_IMPORTChanging(System.Nullable<int> value);
    partial void OnID_RECEIPT_IMPORTChanged();
    partial void OnID_ITEMChanging(System.Nullable<int> value);
    partial void OnID_ITEMChanged();
    partial void OnNUMBERChanging(int value);
    partial void OnNUMBERChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public detail_receipt_import()
		{
			this._item = default(EntityRef<item>);
			this._receipt_import = default(EntityRef<receipt_import>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RECEIPT_IMPORT", DbType="Int")]
		public System.Nullable<int> ID_RECEIPT_IMPORT
		{
			get
			{
				return this._ID_RECEIPT_IMPORT;
			}
			set
			{
				if ((this._ID_RECEIPT_IMPORT != value))
				{
					if (this._receipt_import.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RECEIPT_IMPORTChanging(value);
					this.SendPropertyChanging();
					this._ID_RECEIPT_IMPORT = value;
					this.SendPropertyChanged("ID_RECEIPT_IMPORT");
					this.OnID_RECEIPT_IMPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ITEM", DbType="Int")]
		public System.Nullable<int> ID_ITEM
		{
			get
			{
				return this._ID_ITEM;
			}
			set
			{
				if ((this._ID_ITEM != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ITEMChanging(value);
					this.SendPropertyChanging();
					this._ID_ITEM = value;
					this.SendPropertyChanged("ID_ITEM");
					this.OnID_ITEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="Int NOT NULL")]
		public int NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this.OnNUMBERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER = value;
					this.SendPropertyChanged("NUMBER");
					this.OnNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_detail_receipt_import", Storage="_item", ThisKey="ID_ITEM", OtherKey="ID", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.detail_receipt_imports.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.detail_receipt_imports.Add(this);
						this._ID_ITEM = value.ID;
					}
					else
					{
						this._ID_ITEM = default(Nullable<int>);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_import_detail_receipt_import", Storage="_receipt_import", ThisKey="ID_RECEIPT_IMPORT", OtherKey="ID", IsForeignKey=true)]
		public receipt_import receipt_import
		{
			get
			{
				return this._receipt_import.Entity;
			}
			set
			{
				receipt_import previousValue = this._receipt_import.Entity;
				if (((previousValue != value) 
							|| (this._receipt_import.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._receipt_import.Entity = null;
						previousValue.detail_receipt_imports.Remove(this);
					}
					this._receipt_import.Entity = value;
					if ((value != null))
					{
						value.detail_receipt_imports.Add(this);
						this._ID_RECEIPT_IMPORT = value.ID;
					}
					else
					{
						this._ID_RECEIPT_IMPORT = default(Nullable<int>);
					}
					this.SendPropertyChanged("receipt_import");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.grant_right")]
	public partial class grant_right : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_GROUP;
		
		private string _ID_SCREEN;
		
		private System.Nullable<bool> _ROLE;
		
		private EntityRef<group_user> _group_user;
		
		private EntityRef<screen> _screen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GROUPChanging(int value);
    partial void OnID_GROUPChanged();
    partial void OnID_SCREENChanging(string value);
    partial void OnID_SCREENChanged();
    partial void OnROLEChanging(System.Nullable<bool> value);
    partial void OnROLEChanged();
    #endregion
		
		public grant_right()
		{
			this._group_user = default(EntityRef<group_user>);
			this._screen = default(EntityRef<screen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GROUP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_GROUP
		{
			get
			{
				return this._ID_GROUP;
			}
			set
			{
				if ((this._ID_GROUP != value))
				{
					if (this._group_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GROUPChanging(value);
					this.SendPropertyChanging();
					this._ID_GROUP = value;
					this.SendPropertyChanged("ID_GROUP");
					this.OnID_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SCREEN", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SCREEN
		{
			get
			{
				return this._ID_SCREEN;
			}
			set
			{
				if ((this._ID_SCREEN != value))
				{
					if (this._screen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SCREENChanging(value);
					this.SendPropertyChanging();
					this._ID_SCREEN = value;
					this.SendPropertyChanged("ID_SCREEN");
					this.OnID_SCREENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE", DbType="Bit")]
		public System.Nullable<bool> ROLE
		{
			get
			{
				return this._ROLE;
			}
			set
			{
				if ((this._ROLE != value))
				{
					this.OnROLEChanging(value);
					this.SendPropertyChanging();
					this._ROLE = value;
					this.SendPropertyChanged("ROLE");
					this.OnROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_user_grant_right", Storage="_group_user", ThisKey="ID_GROUP", OtherKey="ID", IsForeignKey=true)]
		public group_user group_user
		{
			get
			{
				return this._group_user.Entity;
			}
			set
			{
				group_user previousValue = this._group_user.Entity;
				if (((previousValue != value) 
							|| (this._group_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._group_user.Entity = null;
						previousValue.grant_rights.Remove(this);
					}
					this._group_user.Entity = value;
					if ((value != null))
					{
						value.grant_rights.Add(this);
						this._ID_GROUP = value.ID;
					}
					else
					{
						this._ID_GROUP = default(int);
					}
					this.SendPropertyChanged("group_user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="screen_grant_right", Storage="_screen", ThisKey="ID_SCREEN", OtherKey="ID", IsForeignKey=true)]
		public screen screen
		{
			get
			{
				return this._screen.Entity;
			}
			set
			{
				screen previousValue = this._screen.Entity;
				if (((previousValue != value) 
							|| (this._screen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._screen.Entity = null;
						previousValue.grant_rights.Remove(this);
					}
					this._screen.Entity = value;
					if ((value != null))
					{
						value.grant_rights.Add(this);
						this._ID_SCREEN = value.ID;
					}
					else
					{
						this._ID_SCREEN = default(string);
					}
					this.SendPropertyChanged("screen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.group_user")]
	public partial class group_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME_GROUP;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<user_group_user> _user_group_users;
		
		private EntitySet<grant_right> _grant_rights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAME_GROUPChanging(string value);
    partial void OnNAME_GROUPChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public group_user()
		{
			this._user_group_users = new EntitySet<user_group_user>(new Action<user_group_user>(this.attach_user_group_users), new Action<user_group_user>(this.detach_user_group_users));
			this._grant_rights = new EntitySet<grant_right>(new Action<grant_right>(this.attach_grant_rights), new Action<grant_right>(this.detach_grant_rights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_GROUP", DbType="NVarChar(50)")]
		public string NAME_GROUP
		{
			get
			{
				return this._NAME_GROUP;
			}
			set
			{
				if ((this._NAME_GROUP != value))
				{
					this.OnNAME_GROUPChanging(value);
					this.SendPropertyChanging();
					this._NAME_GROUP = value;
					this.SendPropertyChanged("NAME_GROUP");
					this.OnNAME_GROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_user_user_group_user", Storage="_user_group_users", ThisKey="ID", OtherKey="ID_GROUP")]
		public EntitySet<user_group_user> user_group_users
		{
			get
			{
				return this._user_group_users;
			}
			set
			{
				this._user_group_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_user_grant_right", Storage="_grant_rights", ThisKey="ID", OtherKey="ID_GROUP")]
		public EntitySet<grant_right> grant_rights
		{
			get
			{
				return this._grant_rights;
			}
			set
			{
				this._grant_rights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_group_users(user_group_user entity)
		{
			this.SendPropertyChanging();
			entity.group_user = this;
		}
		
		private void detach_user_group_users(user_group_user entity)
		{
			this.SendPropertyChanging();
			entity.group_user = null;
		}
		
		private void attach_grant_rights(grant_right entity)
		{
			this.SendPropertyChanging();
			entity.group_user = this;
		}
		
		private void detach_grant_rights(grant_right entity)
		{
			this.SendPropertyChanging();
			entity.group_user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
	public partial class inventory
	{
		
		private int _ID;
		
		private System.Nullable<int> _ID_ITEM;
		
		private System.Nullable<int> _NUMBER;
		
		public inventory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ITEM", DbType="Int")]
		public System.Nullable<int> ID_ITEM
		{
			get
			{
				return this._ID_ITEM;
			}
			set
			{
				if ((this._ID_ITEM != value))
				{
					this._ID_ITEM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="Int")]
		public System.Nullable<int> NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this._NUMBER = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME_ITEM;
		
		private string _UNIT;
		
		private System.Nullable<double> _PRICE_SELL;
		
		private System.Nullable<double> _PRICE_PURCHASE;
		
		private System.Nullable<int> _ID_TYPE_ITEM;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<detail_receipt_import> _detail_receipt_imports;
		
		private EntityRef<type_item> _type_item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAME_ITEMChanging(string value);
    partial void OnNAME_ITEMChanged();
    partial void OnUNITChanging(string value);
    partial void OnUNITChanged();
    partial void OnPRICE_SELLChanging(System.Nullable<double> value);
    partial void OnPRICE_SELLChanged();
    partial void OnPRICE_PURCHASEChanging(System.Nullable<double> value);
    partial void OnPRICE_PURCHASEChanged();
    partial void OnID_TYPE_ITEMChanging(System.Nullable<int> value);
    partial void OnID_TYPE_ITEMChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public item()
		{
			this._detail_receipt_imports = new EntitySet<detail_receipt_import>(new Action<detail_receipt_import>(this.attach_detail_receipt_imports), new Action<detail_receipt_import>(this.detach_detail_receipt_imports));
			this._type_item = default(EntityRef<type_item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_ITEM", DbType="NVarChar(250)")]
		public string NAME_ITEM
		{
			get
			{
				return this._NAME_ITEM;
			}
			set
			{
				if ((this._NAME_ITEM != value))
				{
					this.OnNAME_ITEMChanging(value);
					this.SendPropertyChanging();
					this._NAME_ITEM = value;
					this.SendPropertyChanged("NAME_ITEM");
					this.OnNAME_ITEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="NVarChar(50)")]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_SELL", DbType="Float")]
		public System.Nullable<double> PRICE_SELL
		{
			get
			{
				return this._PRICE_SELL;
			}
			set
			{
				if ((this._PRICE_SELL != value))
				{
					this.OnPRICE_SELLChanging(value);
					this.SendPropertyChanging();
					this._PRICE_SELL = value;
					this.SendPropertyChanged("PRICE_SELL");
					this.OnPRICE_SELLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_PURCHASE", DbType="Float")]
		public System.Nullable<double> PRICE_PURCHASE
		{
			get
			{
				return this._PRICE_PURCHASE;
			}
			set
			{
				if ((this._PRICE_PURCHASE != value))
				{
					this.OnPRICE_PURCHASEChanging(value);
					this.SendPropertyChanging();
					this._PRICE_PURCHASE = value;
					this.SendPropertyChanged("PRICE_PURCHASE");
					this.OnPRICE_PURCHASEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TYPE_ITEM", DbType="Int")]
		public System.Nullable<int> ID_TYPE_ITEM
		{
			get
			{
				return this._ID_TYPE_ITEM;
			}
			set
			{
				if ((this._ID_TYPE_ITEM != value))
				{
					if (this._type_item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TYPE_ITEMChanging(value);
					this.SendPropertyChanging();
					this._ID_TYPE_ITEM = value;
					this.SendPropertyChanged("ID_TYPE_ITEM");
					this.OnID_TYPE_ITEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_detail_receipt_import", Storage="_detail_receipt_imports", ThisKey="ID", OtherKey="ID_ITEM")]
		public EntitySet<detail_receipt_import> detail_receipt_imports
		{
			get
			{
				return this._detail_receipt_imports;
			}
			set
			{
				this._detail_receipt_imports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_item_item", Storage="_type_item", ThisKey="ID_TYPE_ITEM", OtherKey="ID", IsForeignKey=true)]
		public type_item type_item
		{
			get
			{
				return this._type_item.Entity;
			}
			set
			{
				type_item previousValue = this._type_item.Entity;
				if (((previousValue != value) 
							|| (this._type_item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_item.Entity = null;
						previousValue.items.Remove(this);
					}
					this._type_item.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._ID_TYPE_ITEM = value.ID;
					}
					else
					{
						this._ID_TYPE_ITEM = default(Nullable<int>);
					}
					this.SendPropertyChanged("type_item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_detail_receipt_imports(detail_receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_detail_receipt_imports(detail_receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profile")]
	public partial class profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_ACCOUNT;
		
		private System.Nullable<int> _ID_TYPE_CUSTOMER;
		
		private string _IDENTIFICATION;
		
		private string _LAST_NAME;
		
		private string _FIRST_NAME;
		
		private string _PHONE;
		
		private string _ADDRESS;
		
		private string _SEX;
		
		private string _EMAIL;
		
		private EntityRef<account> _account;
		
		private EntityRef<type_customer> _type_customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ACCOUNTChanging(System.Nullable<int> value);
    partial void OnID_ACCOUNTChanged();
    partial void OnID_TYPE_CUSTOMERChanging(System.Nullable<int> value);
    partial void OnID_TYPE_CUSTOMERChanged();
    partial void OnIDENTIFICATIONChanging(string value);
    partial void OnIDENTIFICATIONChanged();
    partial void OnLAST_NAMEChanging(string value);
    partial void OnLAST_NAMEChanged();
    partial void OnFIRST_NAMEChanging(string value);
    partial void OnFIRST_NAMEChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnSEXChanging(string value);
    partial void OnSEXChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public profile()
		{
			this._account = default(EntityRef<account>);
			this._type_customer = default(EntityRef<type_customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ACCOUNT", DbType="Int")]
		public System.Nullable<int> ID_ACCOUNT
		{
			get
			{
				return this._ID_ACCOUNT;
			}
			set
			{
				if ((this._ID_ACCOUNT != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._ID_ACCOUNT = value;
					this.SendPropertyChanged("ID_ACCOUNT");
					this.OnID_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TYPE_CUSTOMER", DbType="Int")]
		public System.Nullable<int> ID_TYPE_CUSTOMER
		{
			get
			{
				return this._ID_TYPE_CUSTOMER;
			}
			set
			{
				if ((this._ID_TYPE_CUSTOMER != value))
				{
					if (this._type_customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TYPE_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_TYPE_CUSTOMER = value;
					this.SendPropertyChanged("ID_TYPE_CUSTOMER");
					this.OnID_TYPE_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDENTIFICATION", DbType="VarChar(12)")]
		public string IDENTIFICATION
		{
			get
			{
				return this._IDENTIFICATION;
			}
			set
			{
				if ((this._IDENTIFICATION != value))
				{
					this.OnIDENTIFICATIONChanging(value);
					this.SendPropertyChanging();
					this._IDENTIFICATION = value;
					this.SendPropertyChanged("IDENTIFICATION");
					this.OnIDENTIFICATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="NVarChar(50)")]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this.OnLAST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LAST_NAME = value;
					this.SendPropertyChanged("LAST_NAME");
					this.OnLAST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="NVarChar(50)")]
		public string FIRST_NAME
		{
			get
			{
				return this._FIRST_NAME;
			}
			set
			{
				if ((this._FIRST_NAME != value))
				{
					this.OnFIRST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FIRST_NAME = value;
					this.SendPropertyChanged("FIRST_NAME");
					this.OnFIRST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="Char(10)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(50)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEX", DbType="NVarChar(5)")]
		public string SEX
		{
			get
			{
				return this._SEX;
			}
			set
			{
				if ((this._SEX != value))
				{
					this.OnSEXChanging(value);
					this.SendPropertyChanging();
					this._SEX = value;
					this.SendPropertyChanged("SEX");
					this.OnSEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_profile", Storage="_account", ThisKey="ID_ACCOUNT", OtherKey="ID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.profiles.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.profiles.Add(this);
						this._ID_ACCOUNT = value.ID;
					}
					else
					{
						this._ID_ACCOUNT = default(Nullable<int>);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_customer_profile", Storage="_type_customer", ThisKey="ID_TYPE_CUSTOMER", OtherKey="ID", IsForeignKey=true)]
		public type_customer type_customer
		{
			get
			{
				return this._type_customer.Entity;
			}
			set
			{
				type_customer previousValue = this._type_customer.Entity;
				if (((previousValue != value) 
							|| (this._type_customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_customer.Entity = null;
						previousValue.profiles.Remove(this);
					}
					this._type_customer.Entity = value;
					if ((value != null))
					{
						value.profiles.Add(this);
						this._ID_TYPE_CUSTOMER = value.ID;
					}
					else
					{
						this._ID_TYPE_CUSTOMER = default(Nullable<int>);
					}
					this.SendPropertyChanged("type_customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receipt")]
	public partial class receipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE_RECEIPT;
		
		private int _ID_ACCOUNT_STAFF;
		
		private int _ID_ACCOUNT_CUSTOMER;
		
		private System.DateTime _CREATE_AT;
		
		private System.Nullable<double> _SUM_MONEY;
		
		private System.Nullable<int> _STATUS;
		
		private EntityRef<account> _account;
		
		private EntityRef<account> _account1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODE_RECEIPTChanging(string value);
    partial void OnCODE_RECEIPTChanged();
    partial void OnID_ACCOUNT_STAFFChanging(int value);
    partial void OnID_ACCOUNT_STAFFChanged();
    partial void OnID_ACCOUNT_CUSTOMERChanging(int value);
    partial void OnID_ACCOUNT_CUSTOMERChanged();
    partial void OnCREATE_ATChanging(System.DateTime value);
    partial void OnCREATE_ATChanged();
    partial void OnSUM_MONEYChanging(System.Nullable<double> value);
    partial void OnSUM_MONEYChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public receipt()
		{
			this._account = default(EntityRef<account>);
			this._account1 = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_RECEIPT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CODE_RECEIPT
		{
			get
			{
				return this._CODE_RECEIPT;
			}
			set
			{
				if ((this._CODE_RECEIPT != value))
				{
					this.OnCODE_RECEIPTChanging(value);
					this.SendPropertyChanging();
					this._CODE_RECEIPT = value;
					this.SendPropertyChanged("CODE_RECEIPT");
					this.OnCODE_RECEIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ACCOUNT_STAFF", DbType="Int NOT NULL")]
		public int ID_ACCOUNT_STAFF
		{
			get
			{
				return this._ID_ACCOUNT_STAFF;
			}
			set
			{
				if ((this._ID_ACCOUNT_STAFF != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ACCOUNT_STAFFChanging(value);
					this.SendPropertyChanging();
					this._ID_ACCOUNT_STAFF = value;
					this.SendPropertyChanged("ID_ACCOUNT_STAFF");
					this.OnID_ACCOUNT_STAFFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ACCOUNT_CUSTOMER", DbType="Int NOT NULL")]
		public int ID_ACCOUNT_CUSTOMER
		{
			get
			{
				return this._ID_ACCOUNT_CUSTOMER;
			}
			set
			{
				if ((this._ID_ACCOUNT_CUSTOMER != value))
				{
					if (this._account1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ACCOUNT_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_ACCOUNT_CUSTOMER = value;
					this.SendPropertyChanged("ID_ACCOUNT_CUSTOMER");
					this.OnID_ACCOUNT_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_AT", DbType="Date NOT NULL")]
		public System.DateTime CREATE_AT
		{
			get
			{
				return this._CREATE_AT;
			}
			set
			{
				if ((this._CREATE_AT != value))
				{
					this.OnCREATE_ATChanging(value);
					this.SendPropertyChanging();
					this._CREATE_AT = value;
					this.SendPropertyChanged("CREATE_AT");
					this.OnCREATE_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_MONEY", DbType="Float")]
		public System.Nullable<double> SUM_MONEY
		{
			get
			{
				return this._SUM_MONEY;
			}
			set
			{
				if ((this._SUM_MONEY != value))
				{
					this.OnSUM_MONEYChanging(value);
					this.SendPropertyChanging();
					this._SUM_MONEY = value;
					this.SendPropertyChanged("SUM_MONEY");
					this.OnSUM_MONEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_receipt", Storage="_account", ThisKey="ID_ACCOUNT_STAFF", OtherKey="ID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.receipts.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.receipts.Add(this);
						this._ID_ACCOUNT_STAFF = value.ID;
					}
					else
					{
						this._ID_ACCOUNT_STAFF = default(int);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_receipt1", Storage="_account1", ThisKey="ID_ACCOUNT_CUSTOMER", OtherKey="ID", IsForeignKey=true)]
		public account account1
		{
			get
			{
				return this._account1.Entity;
			}
			set
			{
				account previousValue = this._account1.Entity;
				if (((previousValue != value) 
							|| (this._account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account1.Entity = null;
						previousValue.receipts1.Remove(this);
					}
					this._account1.Entity = value;
					if ((value != null))
					{
						value.receipts1.Add(this);
						this._ID_ACCOUNT_CUSTOMER = value.ID;
					}
					else
					{
						this._ID_ACCOUNT_CUSTOMER = default(int);
					}
					this.SendPropertyChanged("account1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receipt_import")]
	public partial class receipt_import : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE_IMPORT;
		
		private System.Nullable<int> _ID_SUPPLIER;
		
		private System.Nullable<int> _ID_ACCOUNT;
		
		private System.Nullable<System.DateTime> _CREATE_AT;
		
		private System.Nullable<double> _SUM_MONEY;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<detail_receipt_import> _detail_receipt_imports;
		
		private EntityRef<account> _account;
		
		private EntityRef<supplier> _supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODE_IMPORTChanging(string value);
    partial void OnCODE_IMPORTChanged();
    partial void OnID_SUPPLIERChanging(System.Nullable<int> value);
    partial void OnID_SUPPLIERChanged();
    partial void OnID_ACCOUNTChanging(System.Nullable<int> value);
    partial void OnID_ACCOUNTChanged();
    partial void OnCREATE_ATChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_ATChanged();
    partial void OnSUM_MONEYChanging(System.Nullable<double> value);
    partial void OnSUM_MONEYChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public receipt_import()
		{
			this._detail_receipt_imports = new EntitySet<detail_receipt_import>(new Action<detail_receipt_import>(this.attach_detail_receipt_imports), new Action<detail_receipt_import>(this.detach_detail_receipt_imports));
			this._account = default(EntityRef<account>);
			this._supplier = default(EntityRef<supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_IMPORT", DbType="VarChar(50)")]
		public string CODE_IMPORT
		{
			get
			{
				return this._CODE_IMPORT;
			}
			set
			{
				if ((this._CODE_IMPORT != value))
				{
					this.OnCODE_IMPORTChanging(value);
					this.SendPropertyChanging();
					this._CODE_IMPORT = value;
					this.SendPropertyChanged("CODE_IMPORT");
					this.OnCODE_IMPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SUPPLIER", DbType="Int")]
		public System.Nullable<int> ID_SUPPLIER
		{
			get
			{
				return this._ID_SUPPLIER;
			}
			set
			{
				if ((this._ID_SUPPLIER != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SUPPLIERChanging(value);
					this.SendPropertyChanging();
					this._ID_SUPPLIER = value;
					this.SendPropertyChanged("ID_SUPPLIER");
					this.OnID_SUPPLIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ACCOUNT", DbType="Int")]
		public System.Nullable<int> ID_ACCOUNT
		{
			get
			{
				return this._ID_ACCOUNT;
			}
			set
			{
				if ((this._ID_ACCOUNT != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._ID_ACCOUNT = value;
					this.SendPropertyChanged("ID_ACCOUNT");
					this.OnID_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_AT", DbType="Date")]
		public System.Nullable<System.DateTime> CREATE_AT
		{
			get
			{
				return this._CREATE_AT;
			}
			set
			{
				if ((this._CREATE_AT != value))
				{
					this.OnCREATE_ATChanging(value);
					this.SendPropertyChanging();
					this._CREATE_AT = value;
					this.SendPropertyChanged("CREATE_AT");
					this.OnCREATE_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_MONEY", DbType="Float")]
		public System.Nullable<double> SUM_MONEY
		{
			get
			{
				return this._SUM_MONEY;
			}
			set
			{
				if ((this._SUM_MONEY != value))
				{
					this.OnSUM_MONEYChanging(value);
					this.SendPropertyChanging();
					this._SUM_MONEY = value;
					this.SendPropertyChanged("SUM_MONEY");
					this.OnSUM_MONEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_import_detail_receipt_import", Storage="_detail_receipt_imports", ThisKey="ID", OtherKey="ID_RECEIPT_IMPORT")]
		public EntitySet<detail_receipt_import> detail_receipt_imports
		{
			get
			{
				return this._detail_receipt_imports;
			}
			set
			{
				this._detail_receipt_imports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_receipt_import", Storage="_account", ThisKey="ID_ACCOUNT", OtherKey="ID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.receipt_imports.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.receipt_imports.Add(this);
						this._ID_ACCOUNT = value.ID;
					}
					else
					{
						this._ID_ACCOUNT = default(Nullable<int>);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_receipt_import", Storage="_supplier", ThisKey="ID_SUPPLIER", OtherKey="ID", IsForeignKey=true)]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.receipt_imports.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.receipt_imports.Add(this);
						this._ID_SUPPLIER = value.ID;
					}
					else
					{
						this._ID_SUPPLIER = default(Nullable<int>);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_detail_receipt_imports(detail_receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.receipt_import = this;
		}
		
		private void detach_detail_receipt_imports(detail_receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.receipt_import = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.screen")]
	public partial class screen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _NAME_SCREEN;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<grant_right> _grant_rights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNAME_SCREENChanging(string value);
    partial void OnNAME_SCREENChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public screen()
		{
			this._grant_rights = new EntitySet<grant_right>(new Action<grant_right>(this.attach_grant_rights), new Action<grant_right>(this.detach_grant_rights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_SCREEN", DbType="NVarChar(50)")]
		public string NAME_SCREEN
		{
			get
			{
				return this._NAME_SCREEN;
			}
			set
			{
				if ((this._NAME_SCREEN != value))
				{
					this.OnNAME_SCREENChanging(value);
					this.SendPropertyChanging();
					this._NAME_SCREEN = value;
					this.SendPropertyChanged("NAME_SCREEN");
					this.OnNAME_SCREENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="screen_grant_right", Storage="_grant_rights", ThisKey="ID", OtherKey="ID_SCREEN")]
		public EntitySet<grant_right> grant_rights
		{
			get
			{
				return this._grant_rights;
			}
			set
			{
				this._grant_rights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_grant_rights(grant_right entity)
		{
			this.SendPropertyChanging();
			entity.screen = this;
		}
		
		private void detach_grant_rights(grant_right entity)
		{
			this.SendPropertyChanging();
			entity.screen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.supplier")]
	public partial class supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _ADDRESS;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<receipt_import> _receipt_imports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public supplier()
		{
			this._receipt_imports = new EntitySet<receipt_import>(new Action<receipt_import>(this.attach_receipt_imports), new Action<receipt_import>(this.detach_receipt_imports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(500)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="VarChar(250)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="Char(10)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_receipt_import", Storage="_receipt_imports", ThisKey="ID", OtherKey="ID_SUPPLIER")]
		public EntitySet<receipt_import> receipt_imports
		{
			get
			{
				return this._receipt_imports;
			}
			set
			{
				this._receipt_imports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receipt_imports(receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_receipt_imports(receipt_import entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[table]")]
	public partial class table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_AREA;
		
		private string _NAME_TABLE;
		
		private System.Nullable<int> _STATUS;
		
		private EntityRef<area> _area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_AREAChanging(System.Nullable<int> value);
    partial void OnID_AREAChanged();
    partial void OnNAME_TABLEChanging(string value);
    partial void OnNAME_TABLEChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public table()
		{
			this._area = default(EntityRef<area>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AREA", DbType="Int")]
		public System.Nullable<int> ID_AREA
		{
			get
			{
				return this._ID_AREA;
			}
			set
			{
				if ((this._ID_AREA != value))
				{
					if (this._area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AREAChanging(value);
					this.SendPropertyChanging();
					this._ID_AREA = value;
					this.SendPropertyChanged("ID_AREA");
					this.OnID_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_TABLE", DbType="NVarChar(50)")]
		public string NAME_TABLE
		{
			get
			{
				return this._NAME_TABLE;
			}
			set
			{
				if ((this._NAME_TABLE != value))
				{
					this.OnNAME_TABLEChanging(value);
					this.SendPropertyChanging();
					this._NAME_TABLE = value;
					this.SendPropertyChanged("NAME_TABLE");
					this.OnNAME_TABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="area_table", Storage="_area", ThisKey="ID_AREA", OtherKey="ID", IsForeignKey=true)]
		public area area
		{
			get
			{
				return this._area.Entity;
			}
			set
			{
				area previousValue = this._area.Entity;
				if (((previousValue != value) 
							|| (this._area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._area.Entity = null;
						previousValue.tables.Remove(this);
					}
					this._area.Entity = value;
					if ((value != null))
					{
						value.tables.Add(this);
						this._ID_AREA = value.ID;
					}
					else
					{
						this._ID_AREA = default(Nullable<int>);
					}
					this.SendPropertyChanged("area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.thuchi")]
	public partial class thuchi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_TIMEKEEPING;
		
		private System.Nullable<int> _ID_TYPE;
		
		private System.Nullable<System.DateTime> _DATE;
		
		private string _REASON;
		
		private System.Nullable<double> _MONEY;
		
		private System.Nullable<int> _STATUS;
		
		private EntityRef<timekeeping> _timekeeping;
		
		private EntityRef<type_ballot> _type_ballot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_TIMEKEEPINGChanging(System.Nullable<int> value);
    partial void OnID_TIMEKEEPINGChanged();
    partial void OnID_TYPEChanging(System.Nullable<int> value);
    partial void OnID_TYPEChanged();
    partial void OnDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEChanged();
    partial void OnREASONChanging(string value);
    partial void OnREASONChanged();
    partial void OnMONEYChanging(System.Nullable<double> value);
    partial void OnMONEYChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public thuchi()
		{
			this._timekeeping = default(EntityRef<timekeeping>);
			this._type_ballot = default(EntityRef<type_ballot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIMEKEEPING", DbType="Int")]
		public System.Nullable<int> ID_TIMEKEEPING
		{
			get
			{
				return this._ID_TIMEKEEPING;
			}
			set
			{
				if ((this._ID_TIMEKEEPING != value))
				{
					if (this._timekeeping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIMEKEEPINGChanging(value);
					this.SendPropertyChanging();
					this._ID_TIMEKEEPING = value;
					this.SendPropertyChanged("ID_TIMEKEEPING");
					this.OnID_TIMEKEEPINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TYPE", DbType="Int")]
		public System.Nullable<int> ID_TYPE
		{
			get
			{
				return this._ID_TYPE;
			}
			set
			{
				if ((this._ID_TYPE != value))
				{
					if (this._type_ballot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TYPEChanging(value);
					this.SendPropertyChanging();
					this._ID_TYPE = value;
					this.SendPropertyChanged("ID_TYPE");
					this.OnID_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REASON", DbType="NVarChar(50)")]
		public string REASON
		{
			get
			{
				return this._REASON;
			}
			set
			{
				if ((this._REASON != value))
				{
					this.OnREASONChanging(value);
					this.SendPropertyChanging();
					this._REASON = value;
					this.SendPropertyChanged("REASON");
					this.OnREASONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONEY", DbType="Float")]
		public System.Nullable<double> MONEY
		{
			get
			{
				return this._MONEY;
			}
			set
			{
				if ((this._MONEY != value))
				{
					this.OnMONEYChanging(value);
					this.SendPropertyChanging();
					this._MONEY = value;
					this.SendPropertyChanged("MONEY");
					this.OnMONEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="timekeeping_thuchi", Storage="_timekeeping", ThisKey="ID_TIMEKEEPING", OtherKey="ID", IsForeignKey=true)]
		public timekeeping timekeeping
		{
			get
			{
				return this._timekeeping.Entity;
			}
			set
			{
				timekeeping previousValue = this._timekeeping.Entity;
				if (((previousValue != value) 
							|| (this._timekeeping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._timekeeping.Entity = null;
						previousValue.thuchis.Remove(this);
					}
					this._timekeeping.Entity = value;
					if ((value != null))
					{
						value.thuchis.Add(this);
						this._ID_TIMEKEEPING = value.ID;
					}
					else
					{
						this._ID_TIMEKEEPING = default(Nullable<int>);
					}
					this.SendPropertyChanged("timekeeping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_ballot_thuchi", Storage="_type_ballot", ThisKey="ID_TYPE", OtherKey="ID", IsForeignKey=true)]
		public type_ballot type_ballot
		{
			get
			{
				return this._type_ballot.Entity;
			}
			set
			{
				type_ballot previousValue = this._type_ballot.Entity;
				if (((previousValue != value) 
							|| (this._type_ballot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_ballot.Entity = null;
						previousValue.thuchis.Remove(this);
					}
					this._type_ballot.Entity = value;
					if ((value != null))
					{
						value.thuchis.Add(this);
						this._ID_TYPE = value.ID;
					}
					else
					{
						this._ID_TYPE = default(Nullable<int>);
					}
					this.SendPropertyChanged("type_ballot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.timekeeping")]
	public partial class timekeeping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_ACCOUNT;
		
		private string _STAFF;
		
		private System.Nullable<int> _SHIFT;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<thuchi> _thuchis;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ACCOUNTChanging(System.Nullable<int> value);
    partial void OnID_ACCOUNTChanged();
    partial void OnSTAFFChanging(string value);
    partial void OnSTAFFChanged();
    partial void OnSHIFTChanging(System.Nullable<int> value);
    partial void OnSHIFTChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public timekeeping()
		{
			this._thuchis = new EntitySet<thuchi>(new Action<thuchi>(this.attach_thuchis), new Action<thuchi>(this.detach_thuchis));
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ACCOUNT", DbType="Int")]
		public System.Nullable<int> ID_ACCOUNT
		{
			get
			{
				return this._ID_ACCOUNT;
			}
			set
			{
				if ((this._ID_ACCOUNT != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._ID_ACCOUNT = value;
					this.SendPropertyChanged("ID_ACCOUNT");
					this.OnID_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STAFF", DbType="NVarChar(50)")]
		public string STAFF
		{
			get
			{
				return this._STAFF;
			}
			set
			{
				if ((this._STAFF != value))
				{
					this.OnSTAFFChanging(value);
					this.SendPropertyChanging();
					this._STAFF = value;
					this.SendPropertyChanged("STAFF");
					this.OnSTAFFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHIFT", DbType="Int")]
		public System.Nullable<int> SHIFT
		{
			get
			{
				return this._SHIFT;
			}
			set
			{
				if ((this._SHIFT != value))
				{
					this.OnSHIFTChanging(value);
					this.SendPropertyChanging();
					this._SHIFT = value;
					this.SendPropertyChanged("SHIFT");
					this.OnSHIFTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="timekeeping_thuchi", Storage="_thuchis", ThisKey="ID", OtherKey="ID_TIMEKEEPING")]
		public EntitySet<thuchi> thuchis
		{
			get
			{
				return this._thuchis;
			}
			set
			{
				this._thuchis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_timekeeping", Storage="_account", ThisKey="ID_ACCOUNT", OtherKey="ID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.timekeepings.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.timekeepings.Add(this);
						this._ID_ACCOUNT = value.ID;
					}
					else
					{
						this._ID_ACCOUNT = default(Nullable<int>);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_thuchis(thuchi entity)
		{
			this.SendPropertyChanging();
			entity.timekeeping = this;
		}
		
		private void detach_thuchis(thuchi entity)
		{
			this.SendPropertyChanging();
			entity.timekeeping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_ballot")]
	public partial class type_ballot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME_TYPE;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<thuchi> _thuchis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAME_TYPEChanging(string value);
    partial void OnNAME_TYPEChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public type_ballot()
		{
			this._thuchis = new EntitySet<thuchi>(new Action<thuchi>(this.attach_thuchis), new Action<thuchi>(this.detach_thuchis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_TYPE", DbType="NVarChar(50)")]
		public string NAME_TYPE
		{
			get
			{
				return this._NAME_TYPE;
			}
			set
			{
				if ((this._NAME_TYPE != value))
				{
					this.OnNAME_TYPEChanging(value);
					this.SendPropertyChanging();
					this._NAME_TYPE = value;
					this.SendPropertyChanged("NAME_TYPE");
					this.OnNAME_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_ballot_thuchi", Storage="_thuchis", ThisKey="ID", OtherKey="ID_TYPE")]
		public EntitySet<thuchi> thuchis
		{
			get
			{
				return this._thuchis;
			}
			set
			{
				this._thuchis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_thuchis(thuchi entity)
		{
			this.SendPropertyChanging();
			entity.type_ballot = this;
		}
		
		private void detach_thuchis(thuchi entity)
		{
			this.SendPropertyChanging();
			entity.type_ballot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_customer")]
	public partial class type_customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME_TYPE;
		
		private System.Nullable<int> _STATUS;
		
		private EntitySet<profile> _profiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAME_TYPEChanging(string value);
    partial void OnNAME_TYPEChanged();
    partial void OnSTATUSChanging(System.Nullable<int> value);
    partial void OnSTATUSChanged();
    #endregion
		
		public type_customer()
		{
			this._profiles = new EntitySet<profile>(new Action<profile>(this.attach_profiles), new Action<profile>(this.detach_profiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_TYPE", DbType="NVarChar(50)")]
		public string NAME_TYPE
		{
			get
			{
				return this._NAME_TYPE;
			}
			set
			{
				if ((this._NAME_TYPE != value))
				{
					this.OnNAME_TYPEChanging(value);
					this.SendPropertyChanging();
					this._NAME_TYPE = value;
					this.SendPropertyChanged("NAME_TYPE");
					this.OnNAME_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Int")]
		public System.Nullable<int> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_customer_profile", Storage="_profiles", ThisKey="ID", OtherKey="ID_TYPE_CUSTOMER")]
		public EntitySet<profile> profiles
		{
			get
			{
				return this._profiles;
			}
			set
			{
				this._profiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.type_customer = this;
		}
		
		private void detach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.type_customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_item")]
	public partial class type_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME_TYPE;
		
		private string _STATUS;
		
		private EntitySet<item> _items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAME_TYPEChanging(string value);
    partial void OnNAME_TYPEChanged();
    partial void OnSTATUSChanging(string value);
    partial void OnSTATUSChanged();
    #endregion
		
		public type_item()
		{
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_TYPE", DbType="NVarChar(100)")]
		public string NAME_TYPE
		{
			get
			{
				return this._NAME_TYPE;
			}
			set
			{
				if ((this._NAME_TYPE != value))
				{
					this.OnNAME_TYPEChanging(value);
					this.SendPropertyChanging();
					this._NAME_TYPE = value;
					this.SendPropertyChanged("NAME_TYPE");
					this.OnNAME_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="NChar(10)")]
		public string STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_item_item", Storage="_items", ThisKey="ID", OtherKey="ID_TYPE_ITEM")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.type_item = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.type_item = null;
		}
	}
}
#pragma warning restore 1591
